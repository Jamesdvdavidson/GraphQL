{"version":3,"sources":["components/NavBar.js","helpers/data/Detailed Project Proposal and initial literature review.pdf","pages/Home.js","helpers/ApploClient.js","components/Service/OpenStreetMap.js","components/Service/ServiceLocation.js","components/Service/ServiceTaxonomies.js","components/Service/ServiceInfo.js","components/Service/ServiceContact.js","components/Service/ServiceOrganization.js","components/Service/ServiceEligibility.js","components/Service/ServiceFees.js","components/Service/ServiceServiceAreas.js","components/Service/ServiceRegularSchedule.js","helpers/FormatService.js","pages/Service.js","helpers/FormatServices.js","components/ServicesFilter/Checkbox.js","helpers/data/serviceCheckBoxes.js","components/ServicesFilter.js","components/ServicesFilter/ErrorCard.js","components/ServicesFilter/OpenStreetMap.js","components/ServicesFilter/GraphQLQueryView.js","pages/ServicesList.js","pages/Services.js","pages/About.js","pages/Main.js","App.js","index.js","helpers/data/ServiceTaxonomiesForOlderPeople.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","cursor","buttonText","textTransform","marginLeft","textDecoration","NavBar","classes","className","AppBar","position","Toolbar","Grid","container","direction","justify","alignItems","item","xs","sm","md","lg","Typography","onClick","window","location","hash","variant","style","float","to","Button","color","Home","Fragment","Container","maxWidth","marginTop","Card","CardContent","target","rel","href","Pdf","cache","InMemoryCache","client","ApolloClient","uri","OpenStreetMap","props","loc","MapContainer","center","zoom","scrollWheelZoom","height","TileLayer","attribution","url","Marker","hasOwnProperty","name","Popup","ServiceLocation","data","map","service_at_locations","length","row","latitude","longitude","push","allAddress","add","address","address_1","city","country","state_province","postal_code","line","index","id","ServiceTaxonomies","List","dense","service_taxonomys","tax","ListItem","ListItemIcon","minWidth","LocalOfferOutlined","ListItemText","primary","taxonomy","ServiceInfo","gutterBottom","component","description","ServiceContact","contacts","join","phones","phone","phoneIndex","number","ServiceOrganization","organization","email","ServiceEligibility","eligibilitys","minimum_age","maximum_age","ServiceFees","fees","ServiceServiceAreas","service_areas","area","service_area","ServiceRegularSchedule","regularSchedules","console","log","service_at_location","regular_schedule","fontSize","pos","marginBottom","fullHeightCard","FormatService","paddingTop","Service","Get_Service_Id","gql","useState","resultOut","setResultOut","isLoaded","setIsLoaded","query","variables","match","params","then","result","service","FormatServicesCard","str","len","slice","CardActions","bottom","size","ServicesFilterCheckBox","state","handleChange","label","FormControlLabel","control","Checkbox","checked","onChange","serviceCheckBoxes","Services","taxonomies","sort","ServicesFilter","setWhere","postcode","proximity","items","SocialisingFilters","ServicesFilters","ActivitiesFilters","CopingFilters","React","setState","event","entries","cat","find","category","FormGroup","FormControl","InputLabel","htmlFor","Input","inputRef","aria-describedby","autoComplete","FormHelperText","type","backgroundColor","isValid","current","value","keys","pickBy","substring","where","and","vocabulary","taxonomy_id","or","parseInt","alert","reload","ErrorCard","disableGutters","msg","OpenStreetMapServices","LatLng","mapCentre","setMapCentre","fetch","res","json","resData","parseFloat","lat","long","pull","undefined","markers","flatten","i","LayerGroup","Circle","pathOptions","fillColor","radius","GraphQLQueryView","outWhere","whiteSpace","JSON","stringify","ServicesList","gqlQuery","Get_Services","useRef","isEmpty","per_page","page","services","val","FormatServices","exact","path","card","BackgroundColor","About","Main","App","render","document","getElementById","exports"],"mappings":"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","file":"static/js/main.b4562f5b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        cursor: \"pointer\"\r\n    },\r\n    buttonText: {\r\n        textTransform: \"none\",\r\n        marginLeft: 3,\r\n        textDecoration: \"none\"\r\n    }\r\n\r\n}));\r\n\r\nexport default function NavBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Grid container\r\n                          spacing={1}\r\n                          direction=\"row\"\r\n                          justify=\"flex-start\"\r\n                          alignItems=\"stretch\">\r\n                        <Grid item xs={8} sm={8} md={8} lg={8} key={\"NavBarTitle\"}>\r\n                            <Typography onClick={() => (window.location.hash = \"\")} variant=\"h6\"\r\n                                        className={classes.title} style={{float: \"left\"}}>\r\n                                Open Referral UK - Services for older people\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4} sm={4} md={4} lg={4} key={\"NavBarButtons\"}>\r\n                            <div style={{float: \"right\"}}>\r\n                                <Grid container\r\n                                      spacing={0}\r\n                                      direction=\"row\">\r\n                                    <Grid item xs={\"auto\"} sm={\"auto\"} md={\"auto\"} lg={\"auto\"}\r\n                                          key={\"NavBarButtonsHome\"}>\r\n                                        <Link to={\"/\"}>\r\n                                            <Button variant={\"contained\"} className={classes.buttonText}\r\n                                                    color=\"inherit\" style={{float: \"right\"}}>\r\n                                                Home\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={\"auto\"} sm={\"auto\"} md={\"auto\"} lg={\"auto\"}\r\n                                          key={\"NavBarButtonsServices\"}>\r\n                                        <Link to={\"/services/\"}>\r\n                                            <Button variant={\"contained\"} className={classes.buttonText}\r\n                                                    color=\"inherit\">Services</Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={\"auto\"} sm={\"auto\"} md={\"auto\"} lg={\"auto\"}\r\n                                          key={\"NavBarButtonsAbout\"}>\r\n                                        <Link to={\"/about/\"}>\r\n                                            <Button variant={\"contained\"} className={classes.buttonText}\r\n                                                    color=\"inherit\">About</Button>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Detailed Project Proposal and initial literature review.ba82b46d.pdf\";","import React from 'react';\r\nimport {Button, Card, CardContent, Container, Typography} from \"@material-ui/core\";\r\nimport Pdf from '../helpers/data/Detailed Project Proposal and initial literature review.pdf';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <React.Fragment key={\"Home\"}>\r\n            <Container maxWidth={\"false\"} style={{marginTop: 5}}>\r\n                <Card variant={\"outlined\"}>\r\n                    <CardContent>\r\n                        <Typography variant={\"h4\"}>\r\n                            Open Referral UK - Services for older people\r\n                        </Typography>\r\n                        <Typography variant={\"h5\"}>\r\n                            Welcome\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            This is a demonstration tool to demonstrate the use of the GraphQL API in a client website,\r\n                            taking advantage of GraphQL to fetch only the data need for each page.\r\n                        </Typography>\r\n                        <Typography variant={\"h5\"}>\r\n                            Data\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            The data for the app comes from an Open Referral UK Pilot API, containing data about\r\n                            services available in the Bristol area.\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            This data was provided by Bristol City Council a while ago to Open Referral UK,\r\n                            this data is demonstration purposes only.\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            <a target={\"_blank\"} rel={\"noreferrer noopener\"}\r\n                               href={\"https://openreferraluk.org/\"}>\r\n                                Open Referral UK\r\n                            </a>\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            <a target={\"_blank\"} rel={\"noreferrer noopener\"}\r\n                               href={\"https://api.porism.com/ServiceDirectoryService/swagger-ui.html\"}>\r\n                                Documentation\r\n                            </a>\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            This site was built as a part of my final year dissertation.\r\n                        </Typography>\r\n                        <Typography variant={\"body1\"}>\r\n                            My project proposal can be found&nbsp;\r\n                            <a target={\"_blank\"} rel={\"noreferrer noopener\"}\r\n                               href={Pdf}>\r\n                                here\r\n                            </a>.\r\n                        </Typography>\r\n                        <Typography variant={\"h5\"}>\r\n                            Start\r\n                        </Typography>\r\n                        <Link to={\"/services/\"}>\r\n                            <Button variant={\"contained\"} style={{textTransform: \"none\"}}>\r\n                                Services\r\n                            </Button>\r\n                        </Link>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import {ApolloClient, InMemoryCache} from \"@apollo/client\";\r\n\r\nlet cache = new InMemoryCache();\r\nconst client = new ApolloClient(\r\n    {\r\n        cache: cache,\r\n        uri: 'https://davids44-graphql.herokuapp.com/'\r\n        // uri: 'http://localhost:4000/'\r\n    }\r\n);\r\n\r\nexport default client;\r\n","import {MapContainer, Marker, Popup, TileLayer} from 'react-leaflet';\r\n\r\n\r\nconst OpenStreetMap = (props) => {\r\n    const position = [props.loc[0], props.loc[1]];\r\n    return (\r\n        <MapContainer center={position} zoom={11} scrollWheelZoom={false} style={{height: 300}}>\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={position}>\r\n                {props.hasOwnProperty(\"name\") && props.name !== \"\" ?\r\n                    <Popup>\r\n                        {props.name}\r\n                    </Popup> : null}\r\n            </Marker>\r\n        </MapContainer>);\r\n};\r\n\r\n\r\nexport default OpenStreetMap;\r\n","import CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport OpenStreetMap from \"./OpenStreetMap\";\r\n\r\nlet ServiceLocation = (props) => {\r\n    let data = props.data;\r\n    let map = [];\r\n    return (\r\n        data.hasOwnProperty(\"service_at_locations\")\r\n        && data.service_at_locations.length !== 0 ?\r\n            <CardContent>\r\n                <Typography variant={\"h4\"}>\r\n                    Location\r\n                </Typography>\r\n                {data.service_at_locations.map((row) => {\r\n                    if (row.location.latitude && row.location.longitude) {\r\n                        map.push([row.location.latitude, row.location.longitude]);\r\n                    }\r\n                    let allAddress = [];\r\n                    if (row.location.hasOwnProperty(\"physical_addresses\") && row.location[\"physical_addresses\"].length) {\r\n                        allAddress = row.location[\"physical_addresses\"].map((add) => {\r\n                            let address = [];\r\n                            address.push(add.hasOwnProperty(\"address_1\") && add.address_1 !== \"\"\r\n                                ? add.address_1 : null);\r\n                            address.push(add.hasOwnProperty(\"city\") && add.city !== \"\"\r\n                                ? add.city : null);\r\n                            address.push(add.hasOwnProperty(\"country\") && add.country !== \"\"\r\n                                ? add.country : null);\r\n                            address.push(add.hasOwnProperty(\"state_province\") && add.state_province !== \"\"\r\n                                ? add.state_province : null);\r\n                            address.push(add.hasOwnProperty(\"postal_code\") && add.postal_code !== \"\"\r\n                                ? add.postal_code : null);\r\n\r\n                            return address;\r\n                        });\r\n                    }\r\n\r\n                    return row.location.hasOwnProperty(\"physical_addresses\") ?\r\n                        <React.Fragment key={row.id}>\r\n                            <Typography variant={\"h5\"}>\r\n                                Address\r\n                            </Typography>\r\n                            <div key={\"Addresses\"}>\r\n                                {allAddress.map((add) => (\r\n                                    add.map((line, index) => (\r\n                                        <Typography key={index} variant={\"body1\"}>{line}</Typography>\r\n                                    ))\r\n                                ))}\r\n                            </div>\r\n                            <div key={\"map\"}>\r\n\r\n                            </div>\r\n                        </React.Fragment>\r\n                        : null;\r\n                })}\r\n                {map !== []\r\n                    ? <OpenStreetMap loc={map[0]} name={data.name}/>\r\n                    : null}\r\n            </CardContent> : null);\r\n};\r\n\r\n\r\nexport default ServiceLocation;\r\n","import {Grid, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport {LocalOfferOutlined} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\nconst ServiceTaxonomies = (props) => {\r\n    let data = props.data;\r\n    return (\r\n        <List dense={true}>\r\n            <Grid container\r\n                  spacing={1}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"stretch\">\r\n                {data.hasOwnProperty(\"service_taxonomys\") && data.service_taxonomys.length !== 0\r\n                    ? data.service_taxonomys.map((tax, index) => (\r\n                        <Grid item xs={\"auto\"} sm={\"auto\"} md={\"auto\"} lg={\"auto\"} key={index}>\r\n                            <ListItem>\r\n                                <ListItemIcon style={{minWidth: 10}}>\r\n                                    <LocalOfferOutlined/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={tax.hasOwnProperty(\"taxonomy\") ? tax.taxonomy.name : null}\r\n                                />\r\n                            </ListItem>\r\n                        </Grid>\r\n                    ))\r\n                    : null}\r\n            </Grid>\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default ServiceTaxonomies;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport React from \"react\";\r\nimport ServiceTaxonomies from \"./ServiceTaxonomies\";\r\n\r\nlet ServiceInfo = (props) => {\r\n    let data = props.data;\r\n    return (\r\n        <CardContent style={{height: \"auto\"}}>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n                {data.id}\r\n            </Typography>\r\n            <Typography variant=\"h4\" component=\"h2\">\r\n                {data.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\">\r\n                {data.description}\r\n            </Typography>\r\n            <ServiceTaxonomies data={data}/>\r\n        </CardContent>\r\n    );\r\n};\r\nexport default ServiceInfo;\r\n","import {CardContent, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ServiceContact = (props) => {\r\n    let data = props.data;\r\n\r\n    return (\r\n        data.hasOwnProperty(\"contacts\") && data.contacts.length !== 0 ?\r\n            <CardContent>\r\n                <Typography variant={\"h4\"}>\r\n                    Contact Information\r\n                </Typography>\r\n                {data.contacts.length !== 0 && data.contacts.map((row, index) => (\r\n                    <React.Fragment key={`Contact${index}`}>\r\n                        {row.name || row.title ?\r\n                            <Typography variant={\"body2\"}>\r\n                                Name: {[row.name, row.title].join(\" \")}\r\n                            </Typography> : null}\r\n                        {row.hasOwnProperty(\"phones\") && row.phones.map((phone, phoneIndex) => (\r\n                            <Typography variant={\"body2\"} key={`phone${phoneIndex}`}>\r\n                                Number: {phone.number}\r\n                            </Typography>\r\n                        ))}\r\n                    </React.Fragment>\r\n                ))}\r\n            </CardContent>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default ServiceContact;\r\n","import React from \"react\";\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\n\r\nlet ServiceOrganization = (props) => {\r\n    let data = props.data;\r\n    return (\r\n        <React.Fragment key={data.organization.id}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {data.organization.id}\r\n                </Typography>\r\n                <Typography variant={\"h5\"}>\r\n                    Organization\r\n                </Typography>\r\n                {data.organization.name === data.organization.description ?\r\n                    <Typography variant={\"body2\"}>\r\n                        {data.organization.name}\r\n                    </Typography>\r\n                    :\r\n                    <>\r\n                        <Typography variant={\"body2\"}>\r\n                            {data.organization.name}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"}>\r\n                            {data.organization.description}\r\n                        </Typography>\r\n                    </>\r\n                }\r\n                <Typography variant={\"body2\"}>\r\n                    {data.organization.email}\r\n                </Typography>\r\n                <Typography variant={\"body2\"}>\r\n                    {data.organization.url !== \"\" ? <a href={data.organization.url} target={\"_blank\"}\r\n                                                       rel={\"noreferrer noopener\"}>{data.organization.url}</a> : null}\r\n                </Typography>\r\n\r\n            </CardContent>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default ServiceOrganization;\r\n","import {CardContent, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ServiceEligibility = (props) => {\r\n    let data = props.data;\r\n    return (\r\n        data.hasOwnProperty(\"eligibilitys\") && data.eligibilitys.length !== 0 &&\r\n        <CardContent key={\"eligibilitys\"}>\r\n            <Typography variant={\"h4\"}>\r\n                Eligibility\r\n            </Typography>\r\n            {data.eligibilitys.map((row, index) => (\r\n                <React.Fragment key={index}>\r\n                    {row.hasOwnProperty(\"minimum_age\") && row.minimum_age !== null &&\r\n                    <Typography key={`min${index}`} variant={\"body2\"}>\r\n                        Minimum age: {row.minimum_age}\r\n                    </Typography>}\r\n                    {row.hasOwnProperty(\"maximum_age\") && row.maximum_age !== null &&\r\n                    <Typography key={`max${index}`} variant={\"body2\"}>\r\n                        Maximum age: {row.maximum_age}\r\n                    </Typography>}\r\n                </React.Fragment>\r\n            ))}\r\n        </CardContent>\r\n\r\n    );\r\n};\r\n\r\nexport default ServiceEligibility;\r\n","import {CardContent, Typography} from \"@material-ui/core\";\r\n\r\nconst ServiceFees = (props) => {\r\n    let data = props.data;\r\n    return (\r\n        data.hasOwnProperty(\"fees\") && data.fees !== \"\" ?\r\n            <CardContent>\r\n                <Typography variant={\"h4\"}>\r\n                    Fees\r\n                </Typography>\r\n                <Typography variant={\"body2\"}>\r\n                    {data.fees}\r\n                </Typography>\r\n            </CardContent>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default ServiceFees;\r\n","import {CardContent, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ServiceServiceAreas = (props) => {\r\n    let data = props.data;\r\n    return (\r\n        data.hasOwnProperty(\"service_areas\") && data.service_areas.length !== 0 ?\r\n            <CardContent>\r\n                <Typography variant={\"h4\"}>\r\n                    Service Areas\r\n                </Typography>\r\n                {data.service_areas.map((area, index) => (\r\n                    <React.Fragment key={index}>\r\n                        <Typography variant={\"h5\"}>\r\n                            Area\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"}>\r\n                            {area.hasOwnProperty(\"service_area\") ? area.service_area : \"\"}\r\n                        </Typography>\r\n                        {area.hasOwnProperty(\"uri\") && area.uri !== \"\" ?\r\n                            <Typography variant={\"body2\"}>\r\n                                <a target={\"_blank\"} rel={\"noreferrer noopener\"} href={area.uri}>{area.uri}</a>\r\n                            </Typography> : null}\r\n                    </React.Fragment>\r\n                ))}\r\n            </CardContent>\r\n            : null\r\n    );\r\n};\r\n\r\nexport default ServiceServiceAreas;\r\n","import React from \"react\";\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\n\r\nconst ServiceRegularSchedule = (props) => {\r\n    const data = props.data;\r\n    let regularSchedules = [];\r\n\r\n    console.log(data.service_at_locations);\r\n\r\n    if (data.hasOwnProperty(\"service_at_locations\") && data.service_at_locations.length !== 0) {\r\n        for (let service_at_location of data.service_at_locations) {\r\n            if (service_at_location.hasOwnProperty(\"regular_schedule\") && service_at_location.regular_schedule.length !== 0) {\r\n                for (let row of service_at_location.regular_schedule) {\r\n                    if (row.hasOwnProperty(\"description\") && row.description !== \"\") {\r\n                        regularSchedules.push(row.description);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        regularSchedules.length !== 0 ?\r\n            <CardContent>\r\n                <Typography variant={\"h4\"}>\r\n                    Times\r\n                </Typography>\r\n                {regularSchedules.map((row, index) => (\r\n                    <Typography key={index} variant={\"body2\"}>{row}</Typography>\r\n                ))}\r\n            </CardContent>\r\n\r\n            : null\r\n    );\r\n};\r\n\r\n\r\nexport default ServiceRegularSchedule;\r\n","import {Card, Container, Grid} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport ServiceLocation from \"../components/Service/ServiceLocation\";\r\nimport ServiceInfo from \"../components/Service/ServiceInfo\";\r\nimport ServiceContact from \"../components/Service/ServiceContact\";\r\nimport ServiceOrganization from \"../components/Service/ServiceOrganization\";\r\nimport ServiceEligibility from \"../components/Service/ServiceEligibility\";\r\nimport ServiceFees from \"../components/Service/ServiceFees\";\r\nimport ServiceServiceAreas from \"../components/Service/ServiceServiceAreas\";\r\nimport ServiceRegularSchedule from \"../components/Service/ServiceRegularSchedule\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        height: \"100%\"\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    fullHeightCard: {\r\n        height: \"100%\",\r\n    },\r\n    buttonText: {\r\n        textTransform: \"none\"\r\n    }\r\n});\r\n\r\nconst FormatService = (props) => {\r\n    const data = props.data;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment key={data.id}>\r\n            <Container style={{paddingTop: 5}}>\r\n                <Card className={classes.root} variant={\"outlined\"}>\r\n                    <Grid\r\n                        container\r\n                        spacing={2}\r\n                        direction=\"row\"\r\n                        justify=\"flex-start\"\r\n                        alignItems=\"stretch\">\r\n                        <Grid item xs={12} sm={6} md={6} key={data.id}>\r\n                            <ServiceInfo data={data}/>\r\n                            <ServiceContact data={data}/>\r\n                            <ServiceEligibility data={data}/>\r\n                            <ServiceRegularSchedule data={data}/>\r\n                            <ServiceServiceAreas data={data}/>\r\n                            <ServiceFees data={data}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6} key={\"location\"}>\r\n                            <ServiceLocation data={data}/>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Card>\r\n                <Card variant={\"outlined\"} style={{marginTop: 5}}>\r\n                    <ServiceOrganization data={data}/>\r\n                </Card>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FormatService;\r\n","import React, {useState} from 'react';\r\nimport {gql} from '@apollo/client';\r\nimport client from '../helpers/ApploClient';\r\nimport FormatService from \"../helpers/FormatService\";\r\n\r\n\r\nconst Service = (props) => {\r\n        // props.match.params.id\r\n        const Get_Service_Id = gql`\r\n    query service($id: String!) {\r\n        service(id: $id) {\r\n        accreditations\r\n        assured_date\r\n        attending_access\r\n        attending_type\r\n        contacts {\r\n            id\r\n            name\r\n            phones {\r\n                id\r\n                number\r\n            }\r\n            title\r\n        }\r\n        cost_options {\r\n            amount\r\n            amount_description\r\n            id\r\n            option\r\n            valid_from\r\n            valid_to\r\n        }\r\n        deliverable_type\r\n        description\r\n        eligibilitys {\r\n            eligibility\r\n            id\r\n            maximum_age\r\n            minimum_age\r\n            taxonomys {\r\n                id\r\n                name\r\n                parent {\r\n                    id\r\n                    name\r\n                    parent {\r\n                        id\r\n                        name\r\n                        vocabulary\r\n                    }\r\n                    vocabulary\r\n                }\r\n                vocabulary\r\n            }\r\n        }\r\n        email\r\n        fees\r\n        id\r\n        languages {\r\n            id\r\n            language\r\n        }\r\n        name\r\n        organization {\r\n            description\r\n            email\r\n            id\r\n            logo\r\n            name\r\n            uri\r\n            url\r\n        }\r\n        regular_schedules {\r\n            byday\r\n            bymonthday\r\n            closes_at\r\n            description\r\n            dtstart\r\n            freq\r\n            id\r\n            interval\r\n            opens_at\r\n            valid_from\r\n            valid_to\r\n        }\r\n        service_areas {\r\n            service_area\r\n            uri\r\n        }\r\n        service_at_locations {\r\n            id\r\n            location {\r\n                description\r\n                id\r\n                latitude\r\n                longitude\r\n                name\r\n                physical_addresses {\r\n                    address_1\r\n                    city\r\n                    country\r\n                    id\r\n                    postal_code\r\n                    state_province\r\n                }\r\n            }\r\n            regular_schedule {\r\n                byday\r\n                bymonthday\r\n                closes_at\r\n                description\r\n                dtstart\r\n                freq\r\n                id\r\n                interval\r\n                opens_at\r\n                valid_from\r\n                valid_to\r\n            }\r\n        }\r\n        service_taxonomys {\r\n            id\r\n            taxonomy {\r\n                id\r\n                name\r\n                parent {\r\n                    id\r\n                    name\r\n                    vocabulary\r\n                }\r\n                vocabulary\r\n            }\r\n        }\r\n        status\r\n        url\r\n        }\r\n    }\r\n    `;\r\n\r\n        let [resultOut, setResultOut] = useState({});\r\n        let [isLoaded, setIsLoaded] = useState(0);\r\n        client\r\n            .query({\r\n                    query: Get_Service_Id,\r\n                    variables: {id: props.match.params.id}\r\n                },\r\n            )\r\n            .then(result => {\r\n                setResultOut(result.data.service);\r\n                setIsLoaded(1);\r\n            });\r\n\r\n        return (\r\n            <>\r\n                {isLoaded ? <FormatService data={resultOut}/> : <p>Loading</p>}\r\n            </>\r\n        );\r\n    }\r\n;\r\n\r\nexport default Service;\r\n","import React from \"react\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst truncateString = (str, len) => {\r\n    if (str.length <= len) {\r\n        return str;\r\n    }\r\n    return `${str.slice(0, len)}...`;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        height: \"100%\"\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    fullHeightCard: {\r\n        height: \"100%\",\r\n    },\r\n    buttonText: {\r\n        textTransform: \"none\"\r\n    }\r\n});\r\n\r\nconst FormatServicesCard = (props) => {\r\n    let row = props.row;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent style={{height: \"auto\"}}>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    {row.id}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {row.name}\r\n                </Typography>\r\n                {/*<Typography className={classes.pos} color=\"textSecondary\">*/}\r\n                {/*    adjective*/}\r\n                {/*</Typography>*/}\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {truncateString(row.description, 200)}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{bottom: 0}}>\r\n                <Link to={`/services/${row.id}`}>\r\n                    <Button className={classes.buttonText} size={\"small\"}>Learn more</Button>\r\n                </Link>\r\n            </CardActions>\r\n        </Card>\r\n\r\n    );\r\n};\r\n\r\nexport default FormatServicesCard;\r\n","import {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ServicesFilterCheckBox = (props) => {\r\n    let state = props.state;\r\n    let handleChange = props.handleChange;\r\n    let name = props.name;\r\n    let label = props.label;\r\n    return (\r\n        <FormControlLabel key={name}\r\n                          style={{marginBottom: 0}}\r\n                          control={\r\n                              <Checkbox\r\n                                  checked={state[name]}\r\n                                  onChange={handleChange}\r\n                                  name={name}\r\n                                  color=\"primary\"\r\n                              />\r\n                          }\r\n                          label={label}\r\n        />);\r\n};\r\nexport default ServicesFilterCheckBox;\r\n","import {Services} from './ServiceTaxonomiesForOlderPeople';\r\nimport {map} from 'lodash';\r\n\r\nlet serviceCheckBoxes = map(Services.taxonomies, \"name\").sort();\r\n\r\nexport default serviceCheckBoxes;\r\n","import {\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    FormControl,\r\n    FormGroup,\r\n    FormHelperText,\r\n    Grid,\r\n    Input,\r\n    InputLabel,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ServicesFilterCheckBox from \"./ServicesFilter/Checkbox\";\r\nimport serviceCheckBoxes from \"../helpers/data/serviceCheckBoxes\";\r\nimport {find, keys, pickBy} from 'lodash';\r\nimport {Services} from '../helpers/data/ServiceTaxonomiesForOlderPeople';\r\nimport isValid from \"uk-postcode-validator\";\r\n\r\nconst ServicesFilter = (props) => {\r\n    const setWhere = props.setWhere;\r\n    const setIsLoaded = props.setIsLoaded;\r\n    const postcode = props.postcode;\r\n    const proximity = props.proximity;\r\n    let items = {};\r\n    serviceCheckBoxes.map((item) => (\r\n        items[`checked${item}`] = false\r\n    ));\r\n    let [SocialisingFilters, ServicesFilters, ActivitiesFilters, CopingFilters] = [[], [], [], []];\r\n\r\n\r\n    const [state, setState] = React.useState(items);\r\n\r\n    const handleChange = (event) => {\r\n        setState({...state, [event.target.name]: event.target.checked});\r\n    };\r\n\r\n    for (let [index, item] of serviceCheckBoxes.entries()) {\r\n        let cat = find(Services.taxonomies, {name: item}).category;\r\n\r\n        if (cat === \"Services\") {\r\n            ServicesFilters.push(<ServicesFilterCheckBox key={`${cat}${index}`} state={state}\r\n                                                         handleChange={handleChange}\r\n                                                         name={`checked${item}`} label={`${item}`}/>);\r\n        }\r\n        if (cat === \"Coping\") {\r\n            CopingFilters.push(<ServicesFilterCheckBox key={`${cat}${index}`} state={state} handleChange={handleChange}\r\n                                                       name={`checked${item}`} label={`${item}`}/>);\r\n        }\r\n        if (cat === \"Activities\") {\r\n            ActivitiesFilters.push(<ServicesFilterCheckBox key={`${cat}${index}`} state={state}\r\n                                                           handleChange={handleChange}\r\n                                                           name={`checked${item}`} label={`${item}`}/>);\r\n        }\r\n        if (cat === \"Socialising\") {\r\n            SocialisingFilters.push(<ServicesFilterCheckBox key={`${cat}${index}`} state={state}\r\n                                                            handleChange={handleChange}\r\n                                                            name={`checked${item}`} label={`${item}`}/>);\r\n        }\r\n    }\r\n\r\n    const submitSearch = () => {\r\n\r\n        console.log(!(isValid(postcode.current.value)));\r\n        if (postcode.current.value !== \"\" && !(isValid(postcode.current.value))) {\r\n            alert(\"Invalid postcode\");\r\n            return;\r\n        }\r\n\r\n\r\n        setIsLoaded(0);\r\n        let taxonomies = keys(pickBy(state)).map((value => (value.substring(7))));\r\n\r\n        if (taxonomies.length !== 0) {\r\n            let where = {\r\n                and: [\r\n                    {vocabulary: \"BCC Age Groups\", taxonomy_id: \"bccagegroup:18\"},\r\n                    {\r\n                        or:\r\n                            taxonomies.map((value => (\r\n                                {\r\n                                    vocabulary: find(Services.taxonomies, {name: value}).vocabulary,\r\n                                    taxonomy_id: find(Services.taxonomies, {name: value}).id\r\n                                }\r\n                            )))\r\n\r\n                    }\r\n                ]\r\n            };\r\n\r\n            if (postcode.current.value !== \"\" && proximity.current.value !== \"0\" && proximity.current.value !== \"\") {\r\n                where.and[0][\"postcode\"] = postcode.current.value;\r\n                where.and[0][\"proximity\"] = parseInt(proximity.current.value) * 1000;\r\n            }\r\n\r\n            setWhere(where);\r\n        } else {\r\n            setWhere({});\r\n            setIsLoaded(2);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment key={\"Filters\"}>\r\n            <FormGroup row>\r\n                <Typography variant={\"h6\"}>\r\n                    How far would you travel?\r\n                </Typography>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"input-postal-code\">Postal Code</InputLabel>\r\n                    <Input id=\"input-postal-code\" inputRef={postcode}\r\n                           aria-describedby=\"my-helper-text\" autoComplete={\"off\"}/>\r\n                    <FormHelperText id=\"my-helper-text\">e.g. BS2 0PH</FormHelperText>\r\n                </FormControl>\r\n                &nbsp;\r\n                <FormControl>\r\n                    <InputLabel htmlFor=\"input-proximity\">Proximity</InputLabel>\r\n                    <Input id=\"input-proximity\" inputRef={proximity}\r\n                           type={\"number\"} aria-describedby=\"my-helper-text\" autoComplete={\"off\"}/>\r\n                    <FormHelperText id=\"my-helper-text\">Distance in Km</FormHelperText>\r\n                </FormControl>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <Typography variant={\"h6\"}>\r\n                    Which of these are you interested in?\r\n                </Typography>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <Grid container\r\n                      spacing={2}\r\n                      direction=\"row\"\r\n                      justify=\"flex-start\"\r\n                      alignItems=\"stretch\">\r\n                    <Grid item xs={12} sm={6} md={6} lg={3} key={\"ServicesFilters\"}>\r\n                        <Card variant={\"outlined\"} style={{height: \"100%\", backgroundColor: \"#e9f5de\"}}>\r\n                            <CardContent>\r\n                                <Typography variant={\"h6\"}>\r\n                                    <b>Services</b>\r\n                                </Typography>\r\n                                {ServicesFilters}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} lg={3} key={\"ActivitiesFilters\"}>\r\n                        <Card variant={\"outlined\"} style={{height: \"100%\", backgroundColor: \"#def5ea\"}}>\r\n                            <CardContent>\r\n                                <Typography variant={\"h6\"}>\r\n                                    <b>Activities</b>\r\n                                </Typography>\r\n                                {ActivitiesFilters}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} lg={3} key={\"SocialisingFilters\"}>\r\n                        <Card variant={\"outlined\"} style={{height: \"100%\", backgroundColor: \"#e6def5\"}}>\r\n                            <CardContent>\r\n                                <Typography variant={\"h6\"}>\r\n                                    <b>Socialising</b>\r\n                                </Typography>\r\n                                {SocialisingFilters}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={6} lg={3} key={\"CopingFilters\"}>\r\n                        <Card variant={\"outlined\"} style={{height: \"100%\", backgroundColor: \"#f3efd3\"}}>\r\n                            <CardContent>\r\n                                <Typography variant={\"h6\"}>\r\n                                    <b>Coping</b>\r\n                                </Typography>\r\n                                {CopingFilters}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </FormGroup>\r\n            <FormGroup row style={{marginTop: 5}}>\r\n                <FormControl style={{marginBottom: 10}}>\r\n                    <Button variant={\"contained\"} color={\"primary\"} onClick={submitSearch}>Submit</Button>\r\n                </FormControl>\r\n                <FormControl style={{marginBottom: 10, marginLeft: 5}}>\r\n                    <Button variant={\"contained\"} color={\"primary\"} onClick={() => {\r\n                        window.location.reload();\r\n                    }\r\n                    }>Clear</Button>\r\n                </FormControl>\r\n            </FormGroup>\r\n\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ServicesFilter;\r\n","import {Card, CardContent, Container, Grid, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst ErrorCard = (props) => (\r\n    <Container\r\n        disableGutters={false}\r\n        maxWidth={false}>\r\n        <Grid container\r\n              spacing={2}\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"stretch\">\r\n            <Grid item xs={12} sm={6} md={4} lg={3} key={\"Error\"}>\r\n                <Card variant={\"outlined\"}>\r\n                    <CardContent>\r\n                        <Typography variant={\"body2\"}>\r\n                            {props.msg}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n);\r\n\r\nexport default ErrorCard;\r\n","import {Circle, LayerGroup, MapContainer, Marker, Popup, TileLayer} from 'react-leaflet';\r\nimport React, {useState} from \"react\";\r\nimport {flatten, pull} from 'lodash';\r\nimport {LatLng} from \"leaflet\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport isValid from \"uk-postcode-validator\";\r\n\r\nconst OpenStreetMapServices = (props) => {\r\n    const data = props.data;\r\n    const postcode = props.postcode;\r\n    const proximity = props.proximity;\r\n\r\n    const [mapCentre, setMapCentre] = useState(postcode !== \"\" && isValid(postcode) ? null : new LatLng(51.454649, -2.587954));\r\n\r\n    const [isLoaded, setIsLoaded] = useState(postcode !== \"\" && isValid(postcode) ? 0 : 1);\r\n\r\n\r\n    if (isLoaded === 0 && mapCentre === null) {\r\n\r\n        fetch(`https://api.postcodes.io/postcodes/${postcode}`, {cache: \"force-cache\"}).then(\r\n            res => res.json()\r\n                .then(resData => {\r\n                    console.log(resData);\r\n                    setMapCentre(new LatLng(parseFloat(resData.result.latitude), parseFloat(resData.result.longitude)));\r\n                    setIsLoaded(1);\r\n                })\r\n        );\r\n    }\r\n    let pos = data.map((service) => {\r\n        if (service.hasOwnProperty(\"service_at_locations\") && service.service_at_locations.length !== 0) {\r\n            return service.service_at_locations.map((service_at_location) => {\r\n                if (service_at_location.hasOwnProperty(\"location\") && service_at_location.location.latitude !== null && service_at_location.location.longitude !== null) {\r\n                    return {\r\n                        id: service.id,\r\n                        name: service.name,\r\n                        lat: service_at_location.location.latitude,\r\n                        long: service_at_location.location.longitude\r\n                    };\r\n                }\r\n                return null;\r\n            });\r\n        }\r\n        return null;\r\n    });\r\n    pull(pos, null);\r\n    pull(pos, undefined);\r\n    const positions = flatten(pos);\r\n    const markers = positions.map((loc, i) => (\r\n        <Marker key={i} position={new LatLng(loc.lat, loc.long)}>\r\n            <Popup>\r\n                <Link to={`/services/${loc.id}`}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {loc.name}\r\n                    </Typography>\r\n                </Link>\r\n            </Popup>\r\n        </Marker>\r\n    ));\r\n    return (\r\n        isLoaded ?\r\n            <MapContainer center={mapCentre} zoom={11} scrollWheelZoom={true} style={{height: 300}}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                {markers}\r\n                {proximity ?\r\n                    <LayerGroup>\r\n                        <Circle center={mapCentre} pathOptions={{fillColor: 'blue'}} radius={proximity * 1000}/>\r\n                    </LayerGroup>\r\n                    : null}\r\n\r\n            </MapContainer> : null\r\n    );\r\n};\r\n\r\n\r\nexport default OpenStreetMapServices;\r\n","import React from \"react\";\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nconst GraphQLQueryView = (props) => {\r\n    const where = props.where;\r\n    const outWhere = {\r\n        \"where\": where,\r\n        \"per_page\": 300,\r\n        \"page\": 1\r\n    };\r\n    const query =\r\n        `query services ($page: Int, $per_page: Int, $where: Object) {\r\n            services (page: $page, per_page: $per_page, where: $where) {\r\n                services {\r\n                  id\r\n                  name\r\n                  description\r\n                  service_at_locations {\r\n                    location {\r\n                      latitude\r\n                      longitude\r\n                    }\r\n                  }\r\n                }\r\n            }\r\n        }`;\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant={\"h6\"}>\r\n                GraphQL Query\r\n            </Typography>\r\n            <Typography variant={\"body2\"} style={{whiteSpace: \"break-spaces\"}}>\r\n                {query}\r\n            </Typography>\r\n            <Typography variant={\"h6\"}>\r\n                Arguments\r\n            </Typography>\r\n            <Typography variant={\"body2\"} style={{whiteSpace: \"break-spaces\"}}>\r\n                {JSON.stringify(outWhere, null, \"\\t\")}\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default GraphQLQueryView;\r\n","import React, {useRef, useState} from 'react';\r\nimport {gql} from \"@apollo/client\";\r\nimport client from \"../helpers/ApploClient\";\r\nimport FormatServicesCard from \"../helpers/FormatServices\";\r\nimport {Container, Grid, Typography} from \"@material-ui/core\";\r\nimport ServicesFilter from \"../components/ServicesFilter\";\r\nimport {isEmpty} from 'lodash';\r\nimport ErrorCard from \"../components/ServicesFilter/ErrorCard\";\r\nimport OpenStreetMapServices from \"../components/ServicesFilter/OpenStreetMap\";\r\nimport GraphQLQueryView from \"../components/ServicesFilter/GraphQLQueryView\";\r\n\r\nconst GetServices = (gqlQuery, state) => {\r\n    if (!((isEmpty(state.where[0])) || (state.where.hasOwnProperty(\"and\") && state.where[0].and.hasOwnProperty(\"or\") && state.where[0].and.or.length === 0))) {\r\n        client\r\n            .query({\r\n                    query: gqlQuery,\r\n                    variables: {\r\n                        per_page: 100,\r\n                        page: 1,\r\n                        where: state.where[0]\r\n                    }\r\n                },\r\n            )\r\n            .then(result => {\r\n                state.result[1](result.data.services.services);\r\n                state.isLoaded[1](1);\r\n            });\r\n    } else {\r\n        if (state.isLoaded[0] !== 2) {\r\n            state.isLoaded[1](2);\r\n        }\r\n    }\r\n};\r\n\r\nconst ServicesList = () => {\r\n    const Get_Services = gql`\r\n        query services ($page: Int, $per_page: Int, $where: Object) {\r\n            services (page: $page, per_page: $per_page, where: $where) {\r\n                page {\r\n                    first\r\n                    last\r\n                    number\r\n                    size\r\n                    totalElements\r\n                    totalPages\r\n                }\r\n                services {\r\n                  id\r\n                  name\r\n                  description\r\n                  service_at_locations {\r\n                    location {\r\n                      latitude\r\n                      longitude\r\n                    }\r\n                  }\r\n                }\r\n            }\r\n        }`;\r\n    let [resultOut, setResultOut] = useState([]);\r\n    let [isLoaded, setIsLoaded] = useState(2);\r\n    let [where, setWhere] = useState({});\r\n    const postcode = useRef(null);\r\n    const proximity = useRef(null);\r\n\r\n    GetServices(Get_Services, {\r\n        result: [resultOut, setResultOut],\r\n        isLoaded: [isLoaded, setIsLoaded],\r\n        where: [where, setWhere],\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Container\r\n                disableGutters={false}\r\n                maxWidth={false}>\r\n                <Typography variant={\"h3\"}>\r\n                    Services\r\n                </Typography>\r\n                <ServicesFilter setWhere={setWhere} setIsLoaded={setIsLoaded}\r\n                                postcode={postcode} proximity={proximity}/>\r\n            </Container>\r\n            <div>\r\n                {isLoaded === 1\r\n                    ?\r\n                    <Container\r\n                        disableGutters={false}\r\n                        maxWidth={false}>\r\n                        <Grid\r\n                            container\r\n                            spacing={2}\r\n                            direction=\"row\"\r\n                            justify=\"flex-start\"\r\n                            alignItems=\"stretch\">\r\n                            <Grid item xs={12} sm={12} md={8} lg={9}>\r\n                                <Grid container\r\n                                      spacing={2}\r\n                                      direction=\"row\"\r\n                                      justify=\"flex-start\"\r\n                                      alignItems=\"stretch\"\r\n                                >\r\n                                    {resultOut.map(val =>\r\n                                        (\r\n                                            <Grid item xs={12} sm={6} md={4} lg={3} key={val.id}>\r\n                                                <FormatServicesCard row={val}/>\r\n                                            </Grid>\r\n                                        )\r\n                                    )\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={4} lg={3}>\r\n                                <OpenStreetMapServices data={resultOut} postcode={postcode.current.value}\r\n                                                       proximity={proximity.current.value}/>\r\n                                <GraphQLQueryView where={where}/>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Container>\r\n                    : isLoaded === 0 ? <ErrorCard msg={\"Loading\"}/> : <ErrorCard msg={\"Please select some tags\"}/>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default ServicesList;\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Service from './Service';\r\nimport ServicesList from './ServicesList';\r\n\r\nconst Services = () => (\r\n    <Switch>\r\n        <Route exact path='/services' component={ServicesList}/>\r\n        <Route path='/services/:id' component={Service}/>\r\n    </Switch>\r\n);\r\n\r\nexport default Services;\r\n","import React from 'react';\r\nimport {Card, CardContent, Container, Grid, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        BackgroundColor: \"lavenderblush\"\r\n    },\r\n    root: {\r\n        marginTop: 5\r\n    }\r\n});\r\n\r\nconst About = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container\r\n            className={classes.root}\r\n            disableGutters={false}\r\n            maxWidth={false}>\r\n            <Grid container\r\n                  spacing={2}\r\n                  direction=\"row\"\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"stretch\">\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={\"About\"}>\r\n                    <Card className={classes.card} variant={\"outlined\"}>\r\n                        <CardContent>\r\n                            <Typography variant={\"body2\"}>\r\n                                GraphQL API Demonstration site\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"}>\r\n                                James Davidson\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Services from './Services';\r\nimport About from './About';\r\n\r\nconst Main = () => (\r\n    <main>\r\n        <Switch>\r\n            <Route exact path='/' component={Home}/>\r\n            <Route path='/services' component={Services}/>\r\n            <Route path='/about' component={About}/>\r\n        </Switch>\r\n    </main>\r\n);\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport NavBar from './components/NavBar';\r\nimport Main from './pages/Main';\r\n\r\n\r\nconst App = () => (\r\n    <div>\r\n        <NavBar/>\r\n        <Main/>\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport App from './App';\r\n\r\nrender((\r\n    <HashRouter>\r\n        <App/>\r\n    </HashRouter>\r\n), document.getElementById('root'));\r\n","exports.Services = {\r\n    \"taxonomies\": [\r\n        {\r\n            \"id\": \"bccservicetype:349\",\r\n            \"name\": \"Tea / Coffee\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Socialising\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:156\",\r\n            \"name\": \"Yoga / Meditation\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:15\",\r\n            \"name\": \"Independent Living\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:14\",\r\n            \"name\": \"Housing\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:88\",\r\n            \"name\": \"Mobility Aids\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:154\",\r\n            \"name\": \"Home Care\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:159\",\r\n            \"name\": \"Music\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:41\",\r\n            \"name\": \"Clubs / Classes\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:10\",\r\n            \"name\": \"Befriending\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Socialising\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:21\",\r\n            \"name\": \"Arts / Crafts\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:104\",\r\n            \"name\": \"Isolation\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:167\",\r\n            \"name\": \"Handyman\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:72\",\r\n            \"name\": \"Benefits\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:43\",\r\n            \"name\": \"Dancing\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:48\",\r\n            \"name\": \"Respite\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:13\",\r\n            \"name\": \"Dementia\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:64\",\r\n            \"name\": \"Day Care\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:17\",\r\n            \"name\": \"Volunteering\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:11\",\r\n            \"name\": \"Chiropodist / Foot Care\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:87\",\r\n            \"name\": \"Residential Home\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:90\",\r\n            \"name\": \"Food / Meals / Cooking\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Socialising\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:189\",\r\n            \"name\": \"Walking\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:16\",\r\n            \"name\": \"Shopping\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:201\",\r\n            \"name\": \"Singing\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:120\",\r\n            \"name\": \"Bereavement / Grief\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:221\",\r\n            \"name\": \"Crime\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:158\",\r\n            \"name\": \"Swimming\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:118\",\r\n            \"name\": \"Visual Impairment\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:30\",\r\n            \"name\": \"Counselling\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:46\",\r\n            \"name\": \"Zumba\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:345\",\r\n            \"name\": \"Community Centre / Hub\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Socialising\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:190\",\r\n            \"name\": \"Live in Care\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:73\",\r\n            \"name\": \"Sports\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:71\",\r\n            \"name\": \"Health\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:24\",\r\n            \"name\": \"Animals\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:12\",\r\n            \"name\": \"Debt / Money\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:568\",\r\n            \"name\": \"Badminton\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:144\",\r\n            \"name\": \"Personal Health\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Coping\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:44\",\r\n            \"name\": \"Pilates\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:145\",\r\n            \"name\": \"Personal Assistant\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:94\",\r\n            \"name\": \"Hairdressing\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:413\",\r\n            \"name\": \"Bingo\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Socialising\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:150\",\r\n            \"name\": \"Computers / IT\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:254\",\r\n            \"name\": \"Books / Reading\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:203\",\r\n            \"name\": \"Community Transport\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:178\",\r\n            \"name\": \"Card / Tabletop Games\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:19\",\r\n            \"name\": \"Trips\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Socialising\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:223\",\r\n            \"name\": \"Physiotherapy\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:166\",\r\n            \"name\": \"Cleaning\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:149\",\r\n            \"name\": \"Energy / Heating\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:449\",\r\n            \"name\": \"Tai Chi\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Activities\"\r\n        },\r\n        {\r\n            \"id\": \"bccservicetype:148\",\r\n            \"name\": \"Gardening\",\r\n            \"vocabulary\": \"BCC Services\",\r\n            \"category\": \"Services\"\r\n        }\r\n    ]\r\n};\r\n"],"sourceRoot":""}